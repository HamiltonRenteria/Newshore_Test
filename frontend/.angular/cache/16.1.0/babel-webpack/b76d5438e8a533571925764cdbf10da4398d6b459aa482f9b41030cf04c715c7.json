{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ServiceService {\n  constructor(http) {\n    this.http = http;\n    this.urlApi = 'https://localhost:7208/api/Journey';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  searchJourneys(origin, destination) {\n    return this.http.get(this.urlApi + '?Origin=' + origin + '&Destination=' + destination);\n  }\n}\nServiceService.ɵfac = function ServiceService_Factory(t) {\n  return new (t || ServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ServiceService,\n  factory: ServiceService.ɵfac,\n  providedIn: 'root'\n});\nexport { ServiceService };","map":{"version":3,"names":["HttpHeaders","ServiceService","constructor","http","urlApi","httpOptions","headers","searchJourneys","origin","destination","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\hamil\\source\\Newshore_Test\\frontend\\src\\app\\services\\service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceService {\n  urlApi = 'https://localhost:7208/api/Journey';\n\n  httpOptions = {\n    headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n    })\n  };\n\n  constructor(private http: HttpClient) { }\n\n  searchJourneys(origin: string, destination: string): Observable<any>{\n    return this.http.get<any>(this.urlApi + '?Origin=' + origin + '&Destination='+ destination);\n  }\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAG9D,MAGaC,cAAc;EASzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IARxB,KAAAC,MAAM,GAAG,oCAAoC;IAE7C,KAAAC,WAAW,GAAG;MACZC,OAAO,EAAE,IAAIN,WAAW,CAAC;QACrB,cAAc,EAAE;OACnB;KACF;EAEuC;EAExCO,cAAcA,CAACC,MAAc,EAAEC,WAAmB;IAChD,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAM,IAAI,CAACN,MAAM,GAAG,UAAU,GAAGI,MAAM,GAAG,eAAe,GAAEC,WAAW,CAAC;EAC7F;;AAbWR,cAAc,C;mBAAdA,cAAc,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdb,cAAc,C;SAAdA,cAAc;EAAAc,OAAA,EAAdd,cAAc,CAAAe,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPhB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}